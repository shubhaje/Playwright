"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([["4251"],{3748:function(e,t,n){n.r(t),n.d(t,{default:()=>p,frontMatter:()=>o,metadata:()=>s,assets:()=>d,toc:()=>u,contentTitle:()=>c});var s=JSON.parse('{"id":"emulation","title":"Emulation","description":"Introduction","source":"@site/versioned_docs/version-stable/emulation.mdx","sourceDirName":".","slug":"/emulation","permalink":"/docs/emulation","draft":false,"unlisted":false,"tags":[],"version":"stable","frontMatter":{"id":"emulation","title":"Emulation"},"sidebar":"docs","previous":{"title":"Command line","permalink":"/docs/test-cli"},"next":{"title":"Fixtures","permalink":"/docs/test-fixtures"}}'),a=n("5893"),i=n("65"),r=n("8168"),l=n("7645");n("2079");let o={id:"emulation",title:"Emulation"},c=void 0,d={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Devices",id:"devices",level:2},{value:"Viewport",id:"viewport",level:2},{value:"isMobile",id:"ismobile",level:2},{value:"Locale &amp; Timezone",id:"locale--timezone",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Geolocation",id:"geolocation",level:2},{value:"Color Scheme and Media",id:"color-scheme-and-media",level:2},{value:"User Agent",id:"user-agent",level:2},{value:"Offline",id:"offline",level:2},{value:"JavaScript Enabled",id:"javascript-enabled",level:2}];function h(e){let t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(t.p,{children:["With Playwright you can test your app on any browser as well as emulate a real device such as a mobile phone or tablet. Simply configure the devices you would like to emulate and Playwright will simulate the browser behavior such as ",(0,a.jsx)(t.code,{children:'"userAgent"'}),", ",(0,a.jsx)(t.code,{children:'"screenSize"'}),", ",(0,a.jsx)(t.code,{children:'"viewport"'})," and if it ",(0,a.jsx)(t.code,{children:'"hasTouch"'})," enabled. You can also emulate the ",(0,a.jsx)(t.code,{children:'"geolocation"'}),", ",(0,a.jsx)(t.code,{children:'"locale"'})," and ",(0,a.jsx)(t.code,{children:'"timezone"'})," for all tests or for a specific test as well as set the ",(0,a.jsx)(t.code,{children:'"permissions"'})," to show notifications or change the ",(0,a.jsx)(t.code,{children:'"colorScheme"'}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"devices",children:"Devices"}),"\n",(0,a.jsxs)(t.p,{children:["Playwright comes with a ",(0,a.jsx)(t.a,{href:"https://github.com/microsoft/playwright/blob/main/packages/playwright-core/src/server/deviceDescriptorsSource.json",children:"registry of device parameters"})," using ",(0,a.jsx)(t.a,{href:"/docs/api/class-playwright#playwright-devices",children:"playwright.devices"})," for selected desktop, tablet and mobile devices. It can be used to simulate browser behavior for a specific device such as user agent, screen size, viewport and if it has touch enabled. All tests will run with the specified device parameters."]}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig, devices } from '@playwright/test'; // import devices\n\nexport default defineConfig({\n  projects: [\n    {\n      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome'],\n      },\n    },\n    {\n      name: 'Mobile Safari',\n      use: {\n        ...devices['iPhone 13'],\n      },\n    },\n  ],\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const { chromium, devices } = require('playwright');\nconst browser = await chromium.launch();\n\nconst iphone13 = devices['iPhone 13'];\nconst context = await browser.newContext({\n  ...iphone13,\n});\n"})})})]}),"\n",(0,a.jsx)("img",{width:"458",alt:"playwright.dev website emulated for iPhone 13",src:"https://user-images.githubusercontent.com/13063165/220411073-76fe59f9-9a2d-463d-8e30-c19a7deca133.png"}),"\n",(0,a.jsx)(t.h2,{id:"viewport",children:"Viewport"}),"\n",(0,a.jsxs)(t.p,{children:["The viewport is included in the device but you can override it for some tests with ",(0,a.jsx)(t.a,{href:"/docs/api/class-page#page-set-viewport-size",children:"page.setViewportSize()"}),"."]}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig, devices } from '@playwright/test';\n\nexport default defineConfig({\n  projects: [\n    {\n      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome'],\n        // It is important to define the `viewport` property after destructuring `devices`,\n        // since devices also define the `viewport` for that device.\n        viewport: { width: 1280, height: 720 },\n      },\n    },\n  ]\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// Create context with given viewport\nconst context = await browser.newContext({\n  viewport: { width: 1280, height: 1024 }\n});\n"})})})]}),"\n",(0,a.jsx)(t.p,{children:"Test file:"}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({\n  viewport: { width: 1600, height: 1200 },\n});\n\ntest('my test', async ({ page }) => {\n  // ...\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// Create context with given viewport\nconst context = await browser.newContext({\n  viewport: { width: 1280, height: 1024 }\n});\n\n// Resize viewport for individual page\nawait page.setViewportSize({ width: 1600, height: 1200 });\n\n// Emulate high-DPI\nconst context = await browser.newContext({\n  viewport: { width: 2560, height: 1440 },\n  deviceScaleFactor: 2,\n});\n"})})})]}),"\n",(0,a.jsx)(t.p,{children:"The same works inside a test file."}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.describe('specific viewport block', () => {\n  test.use({ viewport: { width: 1600, height: 1200 } });\n\n  test('my test', async ({ page }) => {\n    // ...\n  });\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// Create context with given viewport\nconst context = await browser.newContext({\n  viewport: { width: 1600, height: 1200 }\n});\nconst page = await context.newPage();\n"})})})]}),"\n",(0,a.jsx)(t.h2,{id:"ismobile",children:"isMobile"}),"\n",(0,a.jsx)(t.p,{children:"Whether the meta viewport tag is taken into account and touch events are enabled."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig, devices } from '@playwright/test';\n\nexport default defineConfig({\n  projects: [\n    {\n      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome'],\n        // It is important to define the `isMobile` property after destructuring `devices`,\n        // since devices also define the `isMobile` for that device.\n        isMobile: false,\n      },\n    },\n  ]\n});\n"})}),"\n",(0,a.jsx)(t.h2,{id:"locale--timezone",children:"Locale & Timezone"}),"\n",(0,a.jsx)(t.p,{children:"Emulate the user Locale and Timezone which can be set globally for all tests in the config and then overridden for particular tests."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    // Emulates the user locale.\n    locale: 'en-GB',\n\n    // Emulates the user timezone.\n    timezoneId: 'Europe/Paris',\n  },\n});\n"})}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({\n  locale: 'de-DE',\n  timezoneId: 'Europe/Berlin',\n});\n\ntest('my test for de lang in Berlin timezone', async ({ page }) => {\n  await page.goto('https://www.bing.com');\n  // ...\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const context = await browser.newContext({\n  locale: 'de-DE',\n  timezoneId: 'Europe/Berlin',\n});\n"})})})]}),"\n",(0,a.jsx)("img",{width:"1394",alt:"Bing in german lang and timezone",src:"https://user-images.githubusercontent.com/13063165/220416571-ccc96ab1-44bb-4579-8430-64502fc24a15.png"}),"\n",(0,a.jsx)(t.h2,{id:"permissions",children:"Permissions"}),"\n",(0,a.jsx)(t.p,{children:"Allow app to show system notifications."}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    // Grants specified permissions to the browser context.\n    permissions: ['notifications'],\n  },\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const context = await browser.newContext({\n  permissions: ['notifications'],\n});\n"})})})]}),"\n",(0,a.jsx)(t.p,{children:"Allow notifications for a specific domain."}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test } from '@playwright/test';\n\ntest.beforeEach(async ({ context }) => {\n  // Runs before each test and signs in each page.\n  await context.grantPermissions(['notifications'], { origin: 'https://skype.com' });\n});\n\ntest('first', async ({ page }) => {\n  // page has notifications permission for https://skype.com.\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"await context.grantPermissions(['notifications'], { origin: 'https://skype.com' });\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:["Revoke all permissions with ",(0,a.jsx)(t.a,{href:"/docs/api/class-browsercontext#browser-context-clear-permissions",children:"browserContext.clearPermissions()"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// Library\nawait context.clearPermissions();\n"})}),"\n",(0,a.jsx)(t.h2,{id:"geolocation",children:"Geolocation"}),"\n",(0,a.jsxs)(t.p,{children:["Grant ",(0,a.jsx)(t.code,{children:'"geolocation"'})," permissions and set geolocation to a specific area."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    // Context geolocation\n    geolocation: { longitude: 12.492507, latitude: 41.889938 },\n    permissions: ['geolocation'],\n  },\n});\n"})}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({\n  geolocation: { longitude: 41.890221, latitude: 12.492348 },\n  permissions: ['geolocation'],\n});\n\ntest('my test with geolocation', async ({ page }) => {\n  // ...\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const context = await browser.newContext({\n  geolocation: { longitude: 41.890221, latitude: 12.492348 },\n  permissions: ['geolocation']\n});\n\n"})})})]}),"\n",(0,a.jsx)("img",{width:"1394",alt:"geolocation for italy on bing maps",src:"https://user-images.githubusercontent.com/13063165/220417670-bb22d815-f5cd-47c4-8562-0b88165eac27.png"}),"\n",(0,a.jsx)(t.p,{children:"Change the location later:"}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({\n  geolocation: { longitude: 41.890221, latitude: 12.492348 },\n  permissions: ['geolocation'],\n});\n\ntest('my test with geolocation', async ({ page, context }) => {\n  // overwrite the location for this test\n  await context.setGeolocation({ longitude: 48.858455, latitude: 2.294474 });\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"await context.setGeolocation({ longitude: 48.858455, latitude: 2.294474 });\n"})})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Note"})," you can only change geolocation for all pages in the context."]}),"\n",(0,a.jsx)(t.h2,{id:"color-scheme-and-media",children:"Color Scheme and Media"}),"\n",(0,a.jsxs)(t.p,{children:["Emulate the users ",(0,a.jsx)(t.code,{children:'"colorScheme"'}),". Supported values are 'light' and 'dark'. You can also emulate the media type with ",(0,a.jsx)(t.a,{href:"/docs/api/class-page#page-emulate-media",children:"page.emulateMedia()"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    colorScheme: 'dark',\n  },\n});\n"})}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({\n  colorScheme: 'dark' // or 'light'\n});\n\ntest('my test with dark mode', async ({ page }) => {\n  // ...\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// Create context with dark mode\nconst context = await browser.newContext({\n  colorScheme: 'dark' // or 'light'\n});\n\n// Create page with dark mode\nconst page = await browser.newPage({\n  colorScheme: 'dark' // or 'light'\n});\n\n// Change color scheme for the page\nawait page.emulateMedia({ colorScheme: 'dark' });\n\n// Change media for page\nawait page.emulateMedia({ media: 'print' });\n"})})})]}),"\n",(0,a.jsx)("img",{width:"1394",alt:"playwright web in dark mode",src:"https://user-images.githubusercontent.com/13063165/220411638-55d2b051-4678-4da7-9f0b-ed22f5a3c47c.png"}),"\n",(0,a.jsx)(t.h2,{id:"user-agent",children:"User Agent"}),"\n",(0,a.jsxs)(t.p,{children:["The User Agent is included in the device and therefore you  will rarely need to change it however if you do need to test a different user agent you can override it with the ",(0,a.jsx)(t.code,{children:"userAgent"})," property."]}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({ userAgent: 'My user agent' });\n\ntest('my user agent test', async ({ page }) => {\n  // ...\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const context = await browser.newContext({\n  userAgent: 'My user agent'\n});\n"})})})]}),"\n",(0,a.jsx)(t.h2,{id:"offline",children:"Offline"}),"\n",(0,a.jsx)(t.p,{children:"Emulate the network being offline."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    offline: true\n  },\n});\n"})}),"\n",(0,a.jsx)(t.h2,{id:"javascript-enabled",children:"JavaScript Enabled"}),"\n",(0,a.jsx)(t.p,{children:"Emulate a user scenario where JavaScript is disabled."}),"\n",(0,a.jsxs)(r.Z,{groupId:"js-flavor",defaultValue:"test",values:[{label:"Test",value:"test"},{label:"Library",value:"library"}],children:[(0,a.jsx)(l.Z,{value:"test",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",metastring:'title="tests/example.spec.ts"',children:"import { test, expect } from '@playwright/test';\n\ntest.use({ javaScriptEnabled: false });\n\ntest('test with no JavaScript', async ({ page }) => {\n  // ...\n});\n"})})}),(0,a.jsx)(l.Z,{value:"library",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const context = await browser.newContext({\n  javaScriptEnabled: false\n});\n"})})})]})]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},7645:function(e,t,n){n.d(t,{Z:()=>i});var s=n("5893");n("7294");var a=n("7026");function i(e){let{children:t,hidden:n,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.Z)("tabItem_Ymn6",i),hidden:n,children:t})}},8168:function(e,t,n){n.d(t,{Z:()=>v});var s=n("5893"),a=n("7294"),i=n("7026"),r=n("4718"),l=n("6550"),o=n("8714"),c=n("9207"),d=n("9413"),u=n("4510");function h(e){var t,n;return null!==(n=null===(t=a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error("Docusaurus error: Bad <Tabs> child <".concat("string"==typeof e.type?e.type:e.type.name,'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.'))}))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function p(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}var g=n("6735");function m(e){let{className:t,block:n,selectedValue:a,selectValue:l,tabValues:o}=e,c=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),u=e=>{let t=e.currentTarget,n=o[c.indexOf(t)].value;n!==a&&(d(t),l(n))},h=e=>{var t,n;let s=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;s=null!==(t=c[n])&&void 0!==t?t:c[0];break}case"ArrowLeft":{let t=c.indexOf(e.currentTarget)-1;s=null!==(n=c[t])&&void 0!==n?n:c[c.length-1]}}null==s||s.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t),children:o.map(e=>{let{value:t,label:n,attributes:r}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>{c.push(e)},onKeyDown:h,onClick:u,...r,className:(0,i.Z)("tabs__item","tabItem_LNqP",null==r?void 0:r.className,{"tabs__item--active":a===t}),children:null!=n?n:t},t)})})}function x(e){let{lazy:t,children:n,selectedValue:r}=e,l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){let e=l.find(e=>e.props.value===r);return e?(0,a.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))})}function f(e){let t=function(e){let{defaultValue:t,queryString:n=!1,groupId:s}=e,i=function(e){let{values:t,children:n}=e;return(0,a.useMemo)(()=>{let e=null!=t?t:h(n).map(e=>{let{props:{value:t,label:n,attributes:s,default:a}}=e;return{value:t,label:n,attributes:s,default:a}});return!function(e){let t=(0,d.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error('Docusaurus error: Duplicate values "'.concat(t.map(e=>e.value).join(", "),'" found in <Tabs>. Every value needs to be unique.'))}(e),e},[t,n])}(e),[r,g]=(0,a.useState)(()=>(function(e){var t;let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw Error('Docusaurus error: The <Tabs> has a defaultValue "'.concat(n,'" but none of its children has the corresponding value. Available values are: ').concat(s.map(e=>e.value).join(", "),". If you intend to show no default tab, use defaultValue={null} instead."));return n}let a=null!==(t=s.find(e=>e.default))&&void 0!==t?t:s[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:t,tabValues:i})),[m,x]=function(e){let{queryString:t=!1,groupId:n}=e,s=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,c._X)(i),(0,a.useCallback)(e=>{if(!i)return;let t=new URLSearchParams(s.location.search);t.set(i,e),s.replace({...s.location,search:t.toString()})},[i,s])]}({queryString:n,groupId:s}),[f,v]=function(e){let{groupId:t}=e,n=t?"docusaurus.tab.".concat(t):null,[s,i]=(0,u.Nk)(n);return[s,(0,a.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:s}),j=(()=>{let e=null!=m?m:f;return p({value:e,tabValues:i})?e:null})();return(0,o.Z)(()=>{j&&g(j)},[j]),{selectedValue:r,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw Error("Can't select invalid tab value=".concat(e));g(e),x(e),v(e)},[x,v,i]),tabValues:i}}(e);return(0,s.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,s.jsx)(m,{...t,...e}),(0,s.jsx)(x,{...t,...e})]})}function v(e){let t=(0,g.Z)();return(0,s.jsx)(f,{...e,children:h(e.children)},String(t))}},2079:function(e,t,n){n.d(t,{Z:()=>r});var s=n("5893");n("7294");let a="dot_iyam",i="menuBar_WzY4",r=e=>{let{children:t}=e;return(0,s.jsxs)("div",{className:"card_GRg2",children:[(0,s.jsxs)("div",{className:"header_XfNy",children:[(0,s.jsxs)("div",{style:{whiteSpace:"nowrap"},children:[(0,s.jsx)("span",{className:a,style:{backgroundColor:"rgb(242, 95, 88)"}}),(0,s.jsx)("span",{className:a,style:{backgroundColor:"rgb(251, 190, 60)"}}),(0,s.jsx)("span",{className:a,style:{backgroundColor:"rgb(88, 203, 66)"}})]}),(0,s.jsx)("div",{className:"addressBar_X0Gc",children:"http://localhost:3000"}),(0,s.jsx)("div",{style:{marginLeft:"auto"},children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{className:i}),(0,s.jsx)("span",{className:i}),(0,s.jsx)("span",{className:i})]})})]}),(0,s.jsxs)("div",{className:"body_ikuQ",children:[(0,s.jsx)("div",{className:"html-card-page ".concat("pageSide_EDh8"," ").concat("webView_lqhL"),children:t[0]}),(0,s.jsx)("div",{className:"html-card-code ".concat("codeSide_OQWj"),children:t[1]})]})]})}},65:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return r}});var s=n(7294);let a={},i=s.createContext(a);function r(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);